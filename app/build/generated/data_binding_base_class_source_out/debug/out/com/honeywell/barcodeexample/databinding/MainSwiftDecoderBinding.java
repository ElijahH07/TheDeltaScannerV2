// Generated by view binder compiler. Do not edit!
package com.honeywell.barcodeexample.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.honeywell.barcodeexample.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MainSwiftDecoderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonDecode;

  @NonNull
  public final Button buttonDecodeLocal;

  @NonNull
  public final ImageView imageViewDec;

  @NonNull
  public final LinearLayout linearLayout1;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout mainLayout;

  @NonNull
  public final TextView textViewDecTime;

  @NonNull
  public final TextView textViewLength;

  @NonNull
  public final TextView textViewRes;

  @NonNull
  public final TextView textViewSymb;

  @NonNull
  public final TextView textViewdeviceId;

  private MainSwiftDecoderBinding(@NonNull LinearLayout rootView, @NonNull Button buttonDecode,
      @NonNull Button buttonDecodeLocal, @NonNull ImageView imageViewDec,
      @NonNull LinearLayout linearLayout1, @NonNull LinearLayout linearLayout2,
      @NonNull LinearLayout mainLayout, @NonNull TextView textViewDecTime,
      @NonNull TextView textViewLength, @NonNull TextView textViewRes,
      @NonNull TextView textViewSymb, @NonNull TextView textViewdeviceId) {
    this.rootView = rootView;
    this.buttonDecode = buttonDecode;
    this.buttonDecodeLocal = buttonDecodeLocal;
    this.imageViewDec = imageViewDec;
    this.linearLayout1 = linearLayout1;
    this.linearLayout2 = linearLayout2;
    this.mainLayout = mainLayout;
    this.textViewDecTime = textViewDecTime;
    this.textViewLength = textViewLength;
    this.textViewRes = textViewRes;
    this.textViewSymb = textViewSymb;
    this.textViewdeviceId = textViewdeviceId;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainSwiftDecoderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainSwiftDecoderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.main_swift_decoder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainSwiftDecoderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonDecode;
      Button buttonDecode = ViewBindings.findChildViewById(rootView, id);
      if (buttonDecode == null) {
        break missingId;
      }

      id = R.id.buttonDecodeLocal;
      Button buttonDecodeLocal = ViewBindings.findChildViewById(rootView, id);
      if (buttonDecodeLocal == null) {
        break missingId;
      }

      id = R.id.imageViewDec;
      ImageView imageViewDec = ViewBindings.findChildViewById(rootView, id);
      if (imageViewDec == null) {
        break missingId;
      }

      id = R.id.linearLayout1;
      LinearLayout linearLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout1 == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      LinearLayout mainLayout = (LinearLayout) rootView;

      id = R.id.textViewDecTime;
      TextView textViewDecTime = ViewBindings.findChildViewById(rootView, id);
      if (textViewDecTime == null) {
        break missingId;
      }

      id = R.id.textViewLength;
      TextView textViewLength = ViewBindings.findChildViewById(rootView, id);
      if (textViewLength == null) {
        break missingId;
      }

      id = R.id.textViewRes;
      TextView textViewRes = ViewBindings.findChildViewById(rootView, id);
      if (textViewRes == null) {
        break missingId;
      }

      id = R.id.textViewSymb;
      TextView textViewSymb = ViewBindings.findChildViewById(rootView, id);
      if (textViewSymb == null) {
        break missingId;
      }

      id = R.id.textViewdeviceId;
      TextView textViewdeviceId = ViewBindings.findChildViewById(rootView, id);
      if (textViewdeviceId == null) {
        break missingId;
      }

      return new MainSwiftDecoderBinding((LinearLayout) rootView, buttonDecode, buttonDecodeLocal,
          imageViewDec, linearLayout1, linearLayout2, mainLayout, textViewDecTime, textViewLength,
          textViewRes, textViewSymb, textViewdeviceId);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
